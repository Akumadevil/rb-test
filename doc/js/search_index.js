var search_data = {"index":{"searchIndex":["abstractprocessor","abstractrenderer","batchprocessorcontroller","htmlrenderer","nokogiri","xml","document","nodeset","processorfactory","rendererfactory","settings","xmlprocessor","build_context()","check_links!()","filter()","filter()","get_thumbs()","get_thumbs()","new()","new()","process()","process()","process()","render()","render()","render()","render_recursively()","renderer=()","run()","to_url()","created.rid","template.slim"],"longSearchIndex":["abstractprocessor","abstractrenderer","batchprocessorcontroller","htmlrenderer","nokogiri","nokogiri::xml","nokogiri::xml::document","nokogiri::xml::nodeset","processorfactory","rendererfactory","settings","xmlprocessor","htmlrenderer::build_context()","htmlrenderer::check_links!()","nokogiri::xml::document#filter()","nokogiri::xml::nodeset#filter()","nokogiri::xml::document#get_thumbs()","nokogiri::xml::nodeset#get_thumbs()","processorfactory::new()","rendererfactory::new()","abstractprocessor#process()","processorfactory#process()","xmlprocessor#process()","abstractrenderer#render()","htmlrenderer#render()","rendererfactory#render()","xmlprocessor#render_recursively()","processorfactory#renderer=()","batchprocessorcontroller::run()","htmlrenderer::to_url()","",""],"info":[["AbstractProcessor","","AbstractProcessor.html","","<p>Futile attempt at abstract factory pattern in a duck-typing language!\nSmells like Java…\n"],["AbstractRenderer","","AbstractRenderer.html","","<p>Futile attempt at abstract factory pattern in a duck-typing language!\nSmells like Java…\n"],["BatchProcessorController","","BatchProcessorController.html","","<p>Initialise an XML processor and attach a HTML renderer, then process the\nbatch\n"],["HtmlRenderer","","HtmlRenderer.html","",""],["Nokogiri","","Nokogiri.html","",""],["Nokogiri::XML","","Nokogiri/XML.html","",""],["Nokogiri::XML::Document","","Nokogiri/XML/Document.html","",""],["Nokogiri::XML::NodeSet","","Nokogiri/XML/NodeSet.html","","<p>Extend with methods to allow functional programming\n"],["ProcessorFactory","","ProcessorFactory.html","","<p>Factory pattern class returns corresponding concrete implementation class\n"],["RendererFactory","","RendererFactory.html","","<p>Factory pattern class returns corresponding concrete implementation class\n"],["Settings","","Settings.html","",""],["XmlProcessor","","XmlProcessor.html","","<p>Concrete implementation of an XML processor that renders through the\nconcrete AbstractRenderer.renderer …\n"],["build_context","HtmlRenderer","HtmlRenderer.html#method-c-build_context","(parent, title, thumbs, links)","<p>Context variables used by the HTML template. Contains the current page\ntitle, parent title/link, thumbnails, …\n"],["check_links!","HtmlRenderer","HtmlRenderer.html#method-c-check_links-21","(title, links)","<p>If navigation links contain the current page title, modify and empty the\nlinks\n"],["filter","Nokogiri::XML::Document","Nokogiri/XML/Document.html#method-i-filter","()","<p>Returns the &lt;exif&gt;&lt;make&gt; elements from this document – sorted\nand without duplicates\n"],["filter","Nokogiri::XML::NodeSet","Nokogiri/XML/NodeSet.html#method-i-filter","()","<p>Returns the &lt;exif&gt;&lt;model&gt; elements from this NodeSet – sorted\nand without duplicates\n"],["get_thumbs","Nokogiri::XML::Document","Nokogiri/XML/Document.html#method-i-get_thumbs","()","<p>Returns the &lt;url type=“small”&gt; elements from this document\n"],["get_thumbs","Nokogiri::XML::NodeSet","Nokogiri/XML/NodeSet.html#method-i-get_thumbs","()","<p>Returns the &lt;url type=“small”&gt; elements from this NodeSet\n"],["new","ProcessorFactory","ProcessorFactory.html#method-c-new","(processor)",""],["new","RendererFactory","RendererFactory.html#method-c-new","(renderer)",""],["process","AbstractProcessor","AbstractProcessor.html#method-i-process","(input_path, export_path)","<p>Abstract method requiring concrete implementation by subclass\n"],["process","ProcessorFactory","ProcessorFactory.html#method-i-process","(input_path, export_path)",""],["process","XmlProcessor","XmlProcessor.html#method-i-process","(input_path, output_path)",""],["render","AbstractRenderer","AbstractRenderer.html#method-i-render","(output_path, title, thumbs, links)","<p>Abstract method requiring concrete implementation by subclass\n"],["render","HtmlRenderer","HtmlRenderer.html#method-i-render","(output_path, parent, title, thumbs, links)","<p>Opens the template, renders the HTML then creates and writes to a file in\nthe output directory\n"],["render","RendererFactory","RendererFactory.html#method-i-render","(output_path, parent, title, thumbs, links)",""],["render_recursively","XmlProcessor","XmlProcessor.html#method-i-render_recursively","(output_path, title, obj, parent = '')","<p>Starting with the top-level recursively render the index, make and\nmake/model pages\n"],["renderer=","ProcessorFactory","ProcessorFactory.html#method-i-renderer-3D","(renderer)",""],["run","BatchProcessorController","BatchProcessorController.html#method-c-run","(input_path, output_path)",""],["to_url","HtmlRenderer","HtmlRenderer.html#method-c-to_url","(input)","<p>Takes a string and returns a URL-friendly version with extension\n"],["created.rid","","doc/created_rid.html","",""],["template.slim","","views/layouts/template_slim.html","","<p>doctype html html\n\n<pre>head\n  title =title\n\nbody\n  h1 =title\n\n  - if parent.any?\n  a href=&quot;#{parent.last}&quot; ...</pre>\n"]]}}